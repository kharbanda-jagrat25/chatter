{"ast":null,"code":"var _jsxFileName = \"/Users/hydro/Desktop/projects/chatter/src/components/Chatter/Chatter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './Chatter.module.scss';\nimport Messages from '../Messages/Messages';\nimport apiCaller from '../../apiCaller';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  MainContainer,\n  Heading,\n  Label,\n  InputContainer,\n  PostBtn,\n  DelBtn\n} = styles;\nexport default function Chatter() {\n  _s();\n  const [text, setText] = useState();\n  const [messages, setMessages] = useState([]);\n  const handleChange = val => setText(val);\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') postMessage();\n  };\n  const fetchMessages = async () => {\n    try {\n      setMessages(await apiCaller({\n        url: 'https://mapi.harmoney.dev/api/v1/messages/'\n      }));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const postMessage = () => {\n    if (text) {\n      apiCaller({\n        url: 'https://mapi.harmoney.dev/api/v1/messages/',\n        method: 'post',\n        body: {\n          text\n        }\n      }).then(fetchMessages).catch(err => {\n        alert('Some error occurred!');\n        console.error(err);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: MainContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: Heading,\n      children: \"Chatter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Label,\n      children: \"Type something in the box below, then hit \\\"Post\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: InputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        onChange: e => handleChange(e.target.value),\n        onKeyDown: handleKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: PostBtn,\n        onClick: postMessage,\n        children: \"Post!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: DelBtn,\n        children: \"Delete All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Messages, {\n      messages: messages,\n      fetchMessages: fetchMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(Chatter, \"w/x/zkefovvfFv0FcK+sqIIDV6E=\");\n_c = Chatter;\nvar _c;\n$RefreshReg$(_c, \"Chatter\");","map":{"version":3,"names":["React","useState","styles","Messages","apiCaller","jsxDEV","_jsxDEV","MainContainer","Heading","Label","InputContainer","PostBtn","DelBtn","Chatter","_s","text","setText","messages","setMessages","handleChange","val","handleKeyDown","e","key","postMessage","fetchMessages","url","err","console","error","method","body","then","catch","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/Users/hydro/Desktop/projects/chatter/src/components/Chatter/Chatter.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styles from './Chatter.module.scss';\nimport Messages from '../Messages/Messages';\nimport apiCaller from '../../apiCaller';\n\nconst {\n    MainContainer,\n    Heading,\n    Label,\n    InputContainer,\n    PostBtn,\n    DelBtn\n} = styles;\n\nexport default function Chatter() {\n    const [text, setText] = useState();\n    const [messages, setMessages] = useState([]);\n\n    const handleChange = val => setText(val);\n\n    const handleKeyDown = e => {\n        if (e.key === 'Enter') postMessage();\n    }\n\n    const fetchMessages = async() => {\n        try {\n            setMessages(await apiCaller({\n                url: 'https://mapi.harmoney.dev/api/v1/messages/'\n            }));\n        }\n        catch (err) {\n            console.error(err);\n        }\n    }\n\n    const postMessage = () => {\n        if (text) {\n            apiCaller({\n                url: 'https://mapi.harmoney.dev/api/v1/messages/',\n                method: 'post',\n                body: {\n                    text\n                }\n            }).then(fetchMessages).catch((err) => {\n                alert('Some error occurred!');\n                console.error(err);\n            });\n        }\n    };\n\n    return (\n        <div className={MainContainer}>\n            <div className={Heading}>Chatter</div>\n            <div className={Label}>Type something in the box below, then hit \"Post\"</div>\n            <div className={InputContainer}>\n                <input\n                    type='text'\n                    value={text}\n                    onChange={e => handleChange(e.target.value)}\n                    onKeyDown={handleKeyDown}\n                />\n                <button className={PostBtn} onClick={postMessage}>Post!</button>\n                <button className={DelBtn}>Delete All</button>\n            </div>\n            <Messages messages={messages} fetchMessages={fetchMessages} />\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}